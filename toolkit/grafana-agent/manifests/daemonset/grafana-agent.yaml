---
# Source: grafana-agent/templates/daemonset/grafana-agent.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: grafana-agent
  namespace: obskit
  labels:
    app.kubernetes.io/name: grafana-agent
    app.kubernetes.io/instance: grafana-agent
spec:
  minReadySeconds: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana-agent
      app.kubernetes.io/instance: grafana-agent
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana-agent
        app.kubernetes.io/instance: grafana-agent
    spec:
      hostPID: true
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      serviceAccount: grafana-agent
      securityContext:
        runAsGroup: 0
        runAsUser: 0
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
      volumes:
        - name: config
          secret:
            secretName: grafana-agent
        - name: temp
          emptyDir: {}
        - name: rootfs
          hostPath:
            path: /
        - name: sysfs
          hostPath:
            path: /sys
        - name: procfs
          hostPath:
            path: /proc
        - name: containers
          hostPath:
            path: /var/lib/docker/containers
        - name: varlog
          hostPath:
            path: /var/log
      containers:
          - name: grafana-agent-config-reloader
            image: jimmidyson/configmap-reload:v0.8.0
            args:
              - --volume-dir=/etc/agent
              - --webhook-url=http://localhost:80/-/reload
            volumeMounts:
              - name: config
                mountPath: /etc/agent
          - name: grafana-agent
            image: grafana/agent:v0.30.2
            args:
              - -config.expand-env=true
              - -config.file=/etc/agent/config.yaml
              - -metrics.wal-directory=/tmp/agent/wal
              - -enable-features=integrations-next
              - -config.enable-read-api
              - -server.http.address=0.0.0.0:80
            env:
              - name: HOSTNAME
                valueFrom:
                  fieldRef:
                    fieldPath: spec.nodeName
            ports:
              - containerPort: 80
                name: http-metrics
            readinessProbe:
              httpGet:
                path: /-/ready
                port: 80
              initialDelaySeconds: 10
              timeoutSeconds: 1
            securityContext:
              capabilities:
                add: ["SYS_TIME"]
              privileged: true
              runAsUser: 0
            volumeMounts:
              - name: config
                mountPath: /etc/agent
              - name: temp
                mountPath: /tmp
              - name: rootfs
                mountPath: /host/root
                readOnly: true
              - name: sysfs
                mountPath: /host/sys
                readOnly: true
              - name: procfs
                mountPath: /host/proc
                readOnly: true
              - name: containers
                mountPath: /var/lib/docker/containers
                readOnly: true
              - name: varlog
                mountPath: /var/log
                readOnly: true
