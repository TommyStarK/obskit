apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki-distributed-querier
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: loki
    app.kubernetes.io/component: querier
    app.kubernetes.io/part-of: memberlist
spec:
  replicas: 1
  revisionHistoryLimit: 10
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: loki-distributed
      app.kubernetes.io/instance: loki
      app.kubernetes.io/component: querier
  template:
    metadata:
      labels:
        app.kubernetes.io/name: loki-distributed
        app.kubernetes.io/instance: loki
        app.kubernetes.io/component: querier
        app.kubernetes.io/part-of: memberlist
    spec:
{{ if eq .Values.minikube false }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/name: loki-distributed
                  app.kubernetes.io/instance: loki
                  app.kubernetes.io/component: querier
              topologyKey: kubernetes.io/hostname
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: loki-distributed
                    app.kubernetes.io/instance: loki
                    app.kubernetes.io/component: querier
                topologyKey: topology.kubernetes.io/zone
{{ end }}
      serviceAccountName: loki-distributed
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      terminationGracePeriodSeconds: 30
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: loki-distributed
              app.kubernetes.io/instance: loki
              app.kubernetes.io/component: querier
      volumes:
        - name: config
          configMap:
            name: loki-distributed-config
        - name: runtime-config
          configMap:
            name: loki-distributed-runtime
        - name: data
          emptyDir: {}
      containers:
        - name: querier
          image: docker.io/grafana/loki:2.7.1
          imagePullPolicy: IfNotPresent
          args:
            - -config.file=/etc/loki/config/config.yaml
            - -target=querier
            - -memberlist.bind-addr=$(POD_IP)
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          ports:
            - name: http
              containerPort: 3100
              protocol: TCP
            - name: grpc
              containerPort: 9095
              protocol: TCP
            - name: http-memberlist
              containerPort: 7946
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 300
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 30
            timeoutSeconds: 1
{{ if eq .Values.setresources true }}
          resources:
            requests:
              cpu: 2
              memory: 4Gi
            limits:
              cpu: 2
              memory: 4Gi
{{ end }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          volumeMounts:
            - name: config
              mountPath: /etc/loki/config
            - name: runtime-config
              mountPath: /var/loki-distributed-runtime
            - name: data
              mountPath: /var/loki
