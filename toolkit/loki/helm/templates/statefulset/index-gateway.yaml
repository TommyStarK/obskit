apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: loki-distributed-index-gateway
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: loki
    app.kubernetes.io/component: index-gateway
spec:
  serviceName: loki-distributed-index-gateway-headless
  replicas: 1
  updateStrategy:
    rollingUpdate:
      partition: 0
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: loki-distributed
      app.kubernetes.io/instance: loki
      app.kubernetes.io/component: index-gateway
  template:
    metadata:
      labels:
        app.kubernetes.io/name: loki-distributed
        app.kubernetes.io/instance: loki
        app.kubernetes.io/component: index-gateway
    spec:
# {{ if eq .Values.minikube false }}
#       affinity:
#         podAntiAffinity:
#           requiredDuringSchedulingIgnoredDuringExecution:
#             - labelSelector:
#                 matchLabels:
#                   app.kubernetes.io/name: loki-distributed
#                   app.kubernetes.io/instance: loki
#                   app.kubernetes.io/component: index-gateway
#               topologyKey: kubernetes.io/hostname
#           preferredDuringSchedulingIgnoredDuringExecution:
#             - weight: 100
#               podAffinityTerm:
#                 labelSelector:
#                   matchLabels:
#                     app.kubernetes.io/name: loki-distributed
#                     app.kubernetes.io/instance: loki
#                     app.kubernetes.io/component: index-gateway
#                 topologyKey: topology.kubernetes.io/zone
# {{ end }}
      serviceAccountName: loki-distributed
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      terminationGracePeriodSeconds: 300
      volumes:
        - name: config
          configMap:
            name: loki-distributed-config
        - name: runtime-config
          configMap:
            name: loki-distributed-runtime
        - name: data
{{ if eq .Values.persistence false }}
          emptyDir: {}
{{ else }}
          persistentVolumeClaim:
            claimName: loki-distributed-index-gateway
{{ end }}
      containers:
        - name: index-gateway
          image: docker.io/grafana/loki:2.7.1
          imagePullPolicy: IfNotPresent
          args:
            - -config.file=/etc/loki/config/config.yaml
            - -target=index-gateway
          ports:
            - name: http
              containerPort: 3100
              protocol: TCP
            - name: grpc
              containerPort: 9095
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 300
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 30
            timeoutSeconds: 1
{{ if eq .Values.setresources true }}
          resources:
            requests:
              cpu: 1
              memory: 4Gi
            limits:
              cpu: 1
              memory: 4Gi
{{ end }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          volumeMounts:
            - name: config
              mountPath: /etc/loki/config
            - name: runtime-config
              mountPath: /var/loki-distributed-runtime
            - name: data
              mountPath: /var/loki
