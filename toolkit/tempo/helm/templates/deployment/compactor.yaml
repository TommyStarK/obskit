apiVersion: apps/v1
kind: Deployment
metadata:
  name: tempo-distributed-compactor
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/name: tempo-distributed
    app.kubernetes.io/instance: tempo
    app.kubernetes.io/component: compactor
    app.kubernetes.io/part-of: memberlist
spec:
  replicas: 1
  minReadySeconds: 10
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: tempo-distributed
      app.kubernetes.io/instance: tempo
      app.kubernetes.io/component: compactor
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: tempo-distributed
        app.kubernetes.io/instance: tempo
        app.kubernetes.io/component: compactor
        app.kubernetes.io/part-of: memberlist
    spec:
      enableServiceLinks: false
      serviceAccountName: tempo-distributed
      securityContext:
        fsGroup: 1000
      terminationGracePeriodSeconds: 30
      volumes:
        - name: config
          configMap:
            name: tempo-distributed-config
        - name: data
{{ if eq .Values.persistence false }}
          emptyDir: {}
{{ else }}
          persistentVolumeClaim:
            claimName: tempo-distributed-compactor
{{ end }}
      containers:
        - name: compactor
          image: docker.io/grafana/tempo:1.5.0
          imagePullPolicy: IfNotPresent
          args:
            - -target=compactor
            - -config.file=/conf/config.yaml
            - -mem-ballast-size-mbs=1024
          ports:
            - containerPort: 3100
              name: http-metrics
            - containerPort: 7946
              name: http-memberlist
{{ if eq .Values.setresources true }}
          resources:
            requests:
              cpu: 1
              memory: 4Gi
            limits:
              cpu: 1
              memory: 4Gi
{{ end }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          volumeMounts:
            - mountPath: /conf
              name: config
            - mountPath: /var/tempo
              name: data
